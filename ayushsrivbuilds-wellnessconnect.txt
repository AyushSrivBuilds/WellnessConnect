Directory structure:
└── ayushsrivbuilds-wellnessconnect/
    ├── README.md
    ├── app.vue
    ├── nuxt.config.ts
    ├── package.json
    ├── tailwind.config.js
    ├── tsconfig.json
    ├── assets/
    │   └── css/
    │       └── main.css
    ├── components/
    │   ├── AppFooter.vue
    │   └── AppHeader.vue
    ├── composables/
    │   └── useApi.js
    ├── layouts/
    │   └── default.vue
    ├── middleware/
    │   └── auth.js
    ├── pages/
    │   ├── index.vue
    │   ├── auth/
    │   │   ├── login.vue
    │   │   └── signup.vue
    │   ├── dashboard/
    │   │   └── index.vue
    │   └── professionals/
    │       └── index.vue
    ├── plugins/
    │   └── auth.client.js
    ├── public/
    │   └── robots.txt
    ├── server/
    │   └── tsconfig.json
    └── stores/
        └── auth.js

================================================
FILE: README.md
================================================
# Nuxt 3 Minimal Starter

Look at the [Nuxt 3 documentation](https://nuxt.com/docs/getting-started/introduction) to learn more.

## Setup

Make sure to install the dependencies:

```bash
# yarn
yarn install

# npm
npm install

# pnpm
pnpm install
```

## Development Server

Start the development server on http://localhost:3000

```bash
npm run dev
```

## Production

Build the application for production:

```bash
npm run build
```

Locally preview production build:

```bash
npm run preview
```

Check out the [deployment documentation](https://nuxt.com/docs/getting-started/deployment) for more information.



================================================
FILE: app.vue
================================================
<template>
  <div>
    <NuxtRouteAnnouncer />
    <NuxtLayout>
      <NuxtPage />
    </NuxtLayout>
  </div>
</template>

<script setup>
// PWA update prompt
const { $pwa } = useNuxtApp()

onMounted(() => {
  if ($pwa?.needRefresh) {
    // Show update notification
    console.log('New version available!')
  }
  
  if ($pwa?.offlineReady) {
    console.log('App ready to work offline')
  }
})
</script>


================================================
FILE: nuxt.config.ts
================================================
// https://nuxt.com/docs/api/configuration/nuxt-config
export default defineNuxtConfig({
  compatibilityDate: '2024-04-03',
  devtools: { enabled: false },
  
  modules: [
    '@nuxtjs/tailwindcss',
    '@pinia/nuxt',
    '@vueuse/nuxt',
    '@nuxtjs/apollo',
    '@vite-pwa/nuxt'
  ],

  css: ['~/assets/css/main.css'],

  apollo: {
    clients: {
      default: {
        httpEndpoint: process.env.NUXT_GRAPHQL_ENDPOINT || 'http://localhost:4000/graphql'
      }
    }
  },

  pwa: {
    registerType: 'autoUpdate',
    manifest: {
      name: 'Wellness Connect',
      short_name: 'WellnessConnect',
      description: 'Connect with wellness professionals near you',
      theme_color: '#10b981',
      background_color: '#ffffff',
      display: 'standalone',
      orientation: 'portrait',
      scope: '/',
      start_url: '/',
      icons: [
        {
          src: '/icon-192.png',
          sizes: '192x192',
          type: 'image/png'
        },
        {
          src: '/icon-512.png',
          sizes: '512x512',
          type: 'image/png'
        }
      ]
    },
    workbox: {
      navigateFallback: '/',
      globPatterns: ['**/*.{js,css,html,png,svg,ico}']
    },
    client: {
      installPrompt: true,
      periodicSyncForUpdates: 20
    },
    devOptions: {
      enabled: true,
      suppressWarnings: true,
      navigateFallbackAllowlist: [/^\/$/],
      type: 'module'
    }
  },

  app: {
    head: {
      charset: 'utf-8',
      viewport: 'width=device-width, initial-scale=1',
      title: 'Wellness Connect - Find Your Perfect Wellness Professional',
      meta: [
        { name: 'description', content: 'Connect with certified yoga instructors, wellness coaches, and nutritionists in your area.' },
        { name: 'keywords', content: 'yoga, wellness, nutrition, coaching, fitness, health' }
      ]
    }
  },

  runtimeConfig: {
    public: {
      apiBase: process.env.NUXT_PUBLIC_API_BASE || 'http://localhost:3001/api',
      graphqlEndpoint: process.env.NUXT_GRAPHQL_ENDPOINT || 'http://localhost:4000/graphql'
    }
  }
})


================================================
FILE: package.json
================================================
{
  "name": "wellness-connect-pwa",
  "private": true,
  "type": "module",
  "scripts": {
    "build": "nuxt build",
    "dev": "HOST=0.0.0.0 nuxt dev",
    "generate": "nuxt generate",
    "preview": "nuxt preview",
    "postinstall": "nuxt prepare"
  },
  "dependencies": {
    "@headlessui/vue": "^1.7.16",
    "@heroicons/vue": "^2.0.18",
    "@nuxtjs/apollo": "^5.0.0-alpha.5",
    "@nuxtjs/tailwindcss": "^6.8.4",
    "@pinia/nuxt": "^0.5.1",
    "@vueuse/nuxt": "^10.5.0",
    "graphql": "^16.8.1",
    "nuxt": "^3.13.0",
    "pinia": "^2.1.7"
  },
  "devDependencies": {
    "@vite-pwa/nuxt": "^0.4.0",
    "autoprefixer": "^10.4.16",
    "postcss": "^8.4.32",
    "tailwindcss": "^3.3.6"
  }
}


================================================
FILE: tailwind.config.js
================================================
/** @type {import('tailwindcss').Config} */
export default {
  content: [
    "./components/**/*.{js,vue,ts}",
    "./layouts/**/*.vue",
    "./pages/**/*.vue",
    "./plugins/**/*.{js,ts}",
    "./app.vue",
    "./error.vue"
  ],
  theme: {
    extend: {
      colors: {
        primary: {
          50: '#f0fdf4',
          100: '#dcfce7',
          200: '#bbf7d0',
          300: '#86efac',
          400: '#4ade80',
          500: '#22c55e',
          600: '#16a34a',
          700: '#15803d',
          800: '#166534',
          900: '#14532d',
        },
        secondary: {
          50: '#f0f9ff',
          100: '#e0f2fe',
          200: '#bae6fd',
          300: '#7dd3fc',
          400: '#38bdf8',
          500: '#0ea5e9',
          600: '#0284c7',
          700: '#0369a1',
          800: '#075985',
          900: '#0c4a6e',
        },
        accent: {
          50: '#fefce8',
          100: '#fef9c3',
          200: '#fef08a',
          300: '#fde047',
          400: '#facc15',
          500: '#eab308',
          600: '#ca8a04',
          700: '#a16207',
          800: '#854d0e',
          900: '#713f12',
        }
      },
      fontFamily: {
        sans: ['Inter', 'system-ui', 'sans-serif'],
      },
      animation: {
        'fade-in': 'fadeIn 0.5s ease-in-out',
        'slide-up': 'slideUp 0.6s ease-out',
        'float': 'float 6s ease-in-out infinite',
      },
      keyframes: {
        fadeIn: {
          '0%': { opacity: '0' },
          '100%': { opacity: '1' },
        },
        slideUp: {
          '0%': { transform: 'translateY(20px)', opacity: '0' },
          '100%': { transform: 'translateY(0)', opacity: '1' },
        },
        float: {
          '0%, 100%': { transform: 'translateY(0px)' },
          '50%': { transform: 'translateY(-20px)' },
        }
      }
    },
  },
  plugins: [],
}


================================================
FILE: tsconfig.json
================================================
{
  // https://v3.nuxtjs.org/concepts/typescript
  "extends": "./.nuxt/tsconfig.json"
}



================================================
FILE: assets/css/main.css
================================================
@import 'tailwindcss/base';
@import 'tailwindcss/components';
@import 'tailwindcss/utilities';
@import url('https://fonts.googleapis.com/css2?family=Inter:wght@300;400;500;600;700&display=swap');

@layer base {
  html {
    scroll-behavior: smooth;
  }
  
  body {
    font-family: 'Inter', system-ui, sans-serif;
    @apply text-gray-900 bg-gray-50;
  }
}

@layer components {
  .btn-primary {
    @apply bg-primary-600 hover:bg-primary-700 text-white px-6 py-3 rounded-lg font-medium transition-all duration-200 hover:shadow-lg hover:shadow-primary-200;
  }
  
  .btn-secondary {
    @apply bg-white text-primary-600 border-2 border-primary-600 hover:bg-primary-50 px-6 py-3 rounded-lg font-medium transition-all duration-200;
  }
  
  .btn-outline {
    @apply border border-gray-300 text-gray-700 hover:bg-gray-50 px-6 py-3 rounded-lg font-medium transition-all duration-200;
  }
  
  .card {
    @apply bg-white rounded-xl shadow-sm hover:shadow-md transition-shadow duration-200 p-6;
  }
  
  .glass {
    @apply bg-white/80 backdrop-blur-sm border border-white/20;
  }
  
  .section-padding {
    @apply px-4 sm:px-6 lg:px-8;
  }
  
  .container-max {
    @apply max-w-7xl mx-auto;
  }
}

/* Custom scrollbar */
::-webkit-scrollbar {
  width: 6px;
}

::-webkit-scrollbar-track {
  background: #f1f5f9;
}

::-webkit-scrollbar-thumb {
  background: #cbd5e1;
  border-radius: 3px;
}

::-webkit-scrollbar-thumb:hover {
  background: #94a3b8;
}


================================================
FILE: components/AppFooter.vue
================================================
<template>
  <footer class="bg-gray-900 text-white">
    <div class="section-padding py-16">
      <div class="container-max">
        <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-8">
          <!-- Company Info -->
          <div class="lg:col-span-2">
            <div class="flex items-center space-x-2 mb-4">
              <div class="w-10 h-10 bg-gradient-to-br from-primary-500 to-secondary-500 rounded-lg flex items-center justify-center">
                <HeartIcon class="h-6 w-6 text-white" />
              </div>
              <span class="text-xl font-bold">WellnessConnect</span>
            </div>
            <p class="text-gray-300 max-w-md mb-6">
              Connecting you with certified wellness professionals to help you achieve your health and wellness goals. 
              Find the perfect yoga instructor, wellness coach, or nutritionist near you.
            </p>
            <div class="flex space-x-4">
              <a href="#" class="text-gray-400 hover:text-white transition-colors">
                <span class="sr-only">Facebook</span>
                <svg class="h-6 w-6" fill="currentColor" viewBox="0 0 24 24">
                  <path d="M22 12c0-5.523-4.477-10-10-10S2 6.477 2 12c0 4.991 3.657 9.128 8.438 9.878v-6.987h-2.54V12h2.54V9.797c0-2.506 1.492-3.89 3.777-3.89 1.094 0 2.238.195 2.238.195v2.46h-1.26c-1.243 0-1.63.771-1.63 1.562V12h2.773l-.443 2.89h-2.33v6.988C18.343 21.128 22 16.991 22 12z"/>
                </svg>
              </a>
              <a href="#" class="text-gray-400 hover:text-white transition-colors">
                <span class="sr-only">Instagram</span>
                <svg class="h-6 w-6" fill="currentColor" viewBox="0 0 24 24">
                  <path d="M12.017 0C5.396 0 .029 5.367.029 11.987c0 6.621 5.367 11.988 11.988 11.988c6.62 0 11.987-5.367 11.987-11.988C24.014 5.367 18.637.001 12.017.001zM8.449 16.988c-1.297 0-2.448-.49-3.323-1.297L3.323 17.49c.875.807 2.026 1.297 3.323 1.297h7.104c1.297 0 2.448-.49 3.323-1.297l-1.803-1.799c-.875.807-2.026 1.297-3.323 1.297H8.449z"/>
                </svg>
              </a>
              <a href="#" class="text-gray-400 hover:text-white transition-colors">
                <span class="sr-only">Twitter</span>
                <svg class="h-6 w-6" fill="currentColor" viewBox="0 0 24 24">
                  <path d="M8.29 20.251c7.547 0 11.675-6.253 11.675-11.675 0-.178 0-.355-.012-.53A8.348 8.348 0 0022 5.92a8.19 8.19 0 01-2.357.646 4.118 4.118 0 001.804-2.27 8.224 8.224 0 01-2.605.996 4.107 4.107 0 00-6.993 3.743 11.65 11.65 0 01-8.457-4.287 4.106 4.106 0 001.27 5.477A4.072 4.072 0 012.8 9.713v.052a4.105 4.105 0 003.292 4.022 4.095 4.095 0 01-1.853.07 4.108 4.108 0 003.834 2.85A8.233 8.233 0 012 18.407a11.616 11.616 0 006.29 1.84"/>
                </svg>
              </a>
            </div>
          </div>

          <!-- Quick Links -->
          <div>
            <h3 class="text-lg font-semibold mb-4">Quick Links</h3>
            <ul class="space-y-3">
              <li><NuxtLink to="/professionals" class="text-gray-300 hover:text-white transition-colors">Find Professionals</NuxtLink></li>
              <li><NuxtLink to="/how-it-works" class="text-gray-300 hover:text-white transition-colors">How It Works</NuxtLink></li>
              <li><NuxtLink to="/about" class="text-gray-300 hover:text-white transition-colors">About Us</NuxtLink></li>
              <li><NuxtLink to="/contact" class="text-gray-300 hover:text-white transition-colors">Contact</NuxtLink></li>
            </ul>
          </div>

          <!-- Support -->
          <div>
            <h3 class="text-lg font-semibold mb-4">Support</h3>
            <ul class="space-y-3">
              <li><NuxtLink to="/help" class="text-gray-300 hover:text-white transition-colors">Help Center</NuxtLink></li>
              <li><NuxtLink to="/privacy" class="text-gray-300 hover:text-white transition-colors">Privacy Policy</NuxtLink></li>
              <li><NuxtLink to="/terms" class="text-gray-300 hover:text-white transition-colors">Terms of Service</NuxtLink></li>
              <li><NuxtLink to="/careers" class="text-gray-300 hover:text-white transition-colors">Careers</NuxtLink></li>
            </ul>
          </div>
        </div>

        <!-- Bottom Bar -->
        <div class="border-t border-gray-800 mt-12 pt-8 flex flex-col md:flex-row justify-between items-center">
          <p class="text-gray-400 text-sm">
            © {{ new Date().getFullYear() }} WellnessConnect. All rights reserved.
          </p>
          <div class="mt-4 md:mt-0">
            <p class="text-gray-400 text-sm">
              Made with ❤️ for wellness enthusiasts
            </p>
          </div>
        </div>
      </div>
    </div>
  </footer>
</template>

<script setup>
import { HeartIcon } from '@heroicons/vue/24/outline'
</script>


================================================
FILE: components/AppHeader.vue
================================================
<template>
  <header class="sticky top-0 z-50 glass border-b border-gray-200/20">
    <nav class="section-padding py-4">
      <div class="container-max flex items-center justify-between">
        <!-- Logo -->
        <NuxtLink to="/" class="flex items-center space-x-2">
          <div class="w-10 h-10 bg-gradient-to-br from-primary-500 to-secondary-500 rounded-lg flex items-center justify-center">
            <HeartIcon class="h-6 w-6 text-white" />
          </div>
          <span class="text-xl font-bold text-gray-900">WellnessConnect</span>
        </NuxtLink>

        <!-- Desktop Navigation -->
        <div class="hidden md:flex items-center space-x-8">
          <NuxtLink 
            v-for="item in navigation" 
            :key="item.name"
            :to="item.href"
            class="text-gray-700 hover:text-primary-600 font-medium transition-colors duration-200"
            :class="{ 'text-primary-600': $route.path === item.href }"
          >
            {{ item.name }}
          </NuxtLink>
        </div>

        <!-- Auth Buttons -->
        <div class="hidden md:flex items-center space-x-4">
          <template v-if="!isAuthenticated">
            <NuxtLink to="/auth/login" class="text-gray-700 hover:text-primary-600 font-medium">
              Login
            </NuxtLink>
            <NuxtLink to="/auth/signup" class="btn-primary">
              Sign Up
            </NuxtLink>
          </template>
          <template v-else>
            <NuxtLink to="/dashboard" class="text-gray-700 hover:text-primary-600 font-medium">
              Dashboard
            </NuxtLink>
            <button @click="logout" class="text-gray-700 hover:text-primary-600 font-medium">
              Logout
            </button>
          </template>
        </div>

        <!-- Mobile Menu Button -->
        <button 
          @click="mobileMenuOpen = !mobileMenuOpen"
          class="md:hidden p-2 text-gray-700 hover:text-primary-600"
        >
          <Bars3Icon v-if="!mobileMenuOpen" class="h-6 w-6" />
          <XMarkIcon v-else class="h-6 w-6" />
        </button>
      </div>

      <!-- Mobile Menu -->
      <div v-if="mobileMenuOpen" class="md:hidden mt-4 pb-4 border-t border-gray-200/20 pt-4">
        <div class="flex flex-col space-y-4">
          <NuxtLink 
            v-for="item in navigation" 
            :key="item.name"
            :to="item.href"
            @click="mobileMenuOpen = false"
            class="text-gray-700 hover:text-primary-600 font-medium transition-colors duration-200"
          >
            {{ item.name }}
          </NuxtLink>
          <div class="flex flex-col space-y-2 pt-4 border-t border-gray-200">
            <template v-if="!isAuthenticated">
              <NuxtLink to="/auth/login" class="btn-outline text-center">
                Login
              </NuxtLink>
              <NuxtLink to="/auth/signup" class="btn-primary text-center">
                Sign Up
              </NuxtLink>
            </template>
            <template v-else>
              <NuxtLink to="/dashboard" class="btn-outline text-center">
                Dashboard
              </NuxtLink>
              <button @click="logout" class="btn-outline">
                Logout
              </button>
            </template>
          </div>
        </div>
      </div>
    </nav>
  </header>
</template>

<script setup>
import { HeartIcon, Bars3Icon, XMarkIcon } from '@heroicons/vue/24/outline'

const mobileMenuOpen = ref(false)
const isAuthenticated = ref(false) // This would come from auth store

const navigation = [
  { name: 'Home', href: '/' },
  { name: 'Find Professionals', href: '/professionals' },
  { name: 'How It Works', href: '/how-it-works' },
  { name: 'About', href: '/about' },
  { name: 'Contact', href: '/contact' },
]

const logout = () => {
  // Handle logout logic
  isAuthenticated.value = false
  navigateTo('/auth/login')
}

// Close mobile menu when route changes
watch(() => useRoute().path, () => {
  mobileMenuOpen.value = false
})
</script>


================================================
FILE: composables/useApi.js
================================================
export const useApi = () => {
  const { token } = useAuthStore()
  const config = useRuntimeConfig()

  const api = $fetch.create({
    baseURL: config.public.apiBase,
    headers: {
      'Content-Type': 'application/json',
      ...(token.value && { Authorization: `Bearer ${token.value}` })
    },
    onResponseError({ response }) {
      if (response.status === 401) {
        // Token expired or invalid
        const authStore = useAuthStore()
        authStore.logout()
      }
    }
  })

  return { api }
}


================================================
FILE: layouts/default.vue
================================================
<template>
  <div class="min-h-screen bg-gray-50">
    <AppHeader />
    <main>
      <slot />
    </main>
    <AppFooter />
  </div>
</template>

<script setup>
// Global layout for the application
</script>


================================================
FILE: middleware/auth.js
================================================
export default defineNuxtRouteMiddleware((to, from) => {
  const { isAuthenticated } = useAuthStore()
  
  if (!isAuthenticated) {
    return navigateTo('/auth/login')
  }
})


================================================
FILE: pages/index.vue
================================================
<template>
  <div>
    <!-- Hero Section -->
    <section class="relative bg-gradient-to-br from-primary-50 via-white to-secondary-50 overflow-hidden">
      <div class="absolute inset-0 bg-[url('data:image/svg+xml,%3Csvg width=&quot;60&quot; height=&quot;60&quot; viewBox=&quot;0 0 60 60&quot; xmlns=&quot;http://www.w3.org/2000/svg&quot;%3E%3Cg fill=&quot;none&quot; fill-rule=&quot;evenodd&quot;%3E%3Cg fill=&quot;%2322c55e&quot; fill-opacity=&quot;0.05&quot;%3E%3Ccircle cx=&quot;30&quot; cy=&quot;30&quot; r=&quot;4&quot;/%3E%3C/g%3E%3C/g%3E%3C/svg%3E')] opacity-40"></div>
      
      <div class="section-padding py-20 lg:py-32 relative">
        <div class="container-max">
          <div class="grid grid-cols-1 lg:grid-cols-2 gap-12 items-center">
            <div class="animate-fade-in">
              <h1 class="text-4xl md:text-5xl lg:text-6xl font-bold text-gray-900 leading-tight mb-6">
                Find Your Perfect
                <span class="bg-gradient-to-r from-primary-600 to-secondary-600 bg-clip-text text-transparent">
                  Wellness Professional
                </span>
              </h1>
              <p class="text-xl text-gray-600 mb-8 leading-relaxed">
                Connect with certified yoga instructors, wellness coaches, and nutritionists in your area. 
                Start your journey to better health today.
              </p>
              <div class="flex flex-col sm:flex-row gap-4">
                <NuxtLink to="/professionals" class="btn-primary text-center">
                  Find Professionals
                </NuxtLink>
                <NuxtLink to="/how-it-works" class="btn-secondary text-center">
                  How It Works
                </NuxtLink>
              </div>
              
              <!-- Stats -->
              <div class="grid grid-cols-3 gap-6 mt-12 pt-8 border-t border-gray-200">
                <div class="text-center">
                  <div class="text-2xl font-bold text-primary-600 mb-1">500+</div>
                  <div class="text-sm text-gray-600">Professionals</div>
                </div>
                <div class="text-center">
                  <div class="text-2xl font-bold text-primary-600 mb-1">10k+</div>
                  <div class="text-sm text-gray-600">Happy Clients</div>
                </div>
                <div class="text-center">
                  <div class="text-2xl font-bold text-primary-600 mb-1">50+</div>
                  <div class="text-sm text-gray-600">Cities</div>
                </div>
              </div>
            </div>
            
            <div class="relative animate-slide-up">
              <div class="relative z-10">
                <img 
                  src="https://images.pexels.com/photos/3822622/pexels-photo-3822622.jpeg?auto=compress&cs=tinysrgb&w=800"
                  alt="Wellness professional with client"
                  class="rounded-2xl shadow-2xl"
                />
              </div>
              <div class="absolute -top-4 -right-4 w-72 h-72 bg-gradient-to-br from-primary-400 to-secondary-400 rounded-full opacity-20 animate-float"></div>
              <div class="absolute -bottom-6 -left-6 w-48 h-48 bg-gradient-to-br from-accent-400 to-primary-400 rounded-full opacity-20 animate-float" style="animation-delay: -3s;"></div>
            </div>
          </div>
        </div>
      </div>
    </section>

    <!-- Services Section -->
    <section class="section-padding py-20 bg-white">
      <div class="container-max">
        <div class="text-center mb-16">
          <h2 class="text-3xl md:text-4xl font-bold text-gray-900 mb-4">
            Wellness Services for Every Need
          </h2>
          <p class="text-xl text-gray-600 max-w-3xl mx-auto">
            Whether you're looking to improve your physical fitness, mental well-being, or nutrition, 
            our certified professionals are here to guide you.
          </p>
        </div>

        <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-8">
          <div v-for="service in services" :key="service.title" class="card group hover:shadow-xl transition-all duration-300">
            <div class="w-16 h-16 bg-gradient-to-br from-primary-100 to-primary-200 rounded-xl flex items-center justify-center mb-6 group-hover:scale-110 transition-transform duration-200">
              <component :is="service.icon" class="h-8 w-8 text-primary-600" />
            </div>
            <h3 class="text-xl font-semibold text-gray-900 mb-3">{{ service.title }}</h3>
            <p class="text-gray-600 mb-4">{{ service.description }}</p>
            <NuxtLink :to="service.link" class="text-primary-600 font-medium hover:text-primary-700 inline-flex items-center">
              Learn More
              <ArrowRightIcon class="ml-2 h-4 w-4" />
            </NuxtLink>
          </div>
        </div>
      </div>
    </section>

    <!-- How It Works Section -->
    <section class="section-padding py-20 bg-gray-50">
      <div class="container-max">
        <div class="text-center mb-16">
          <h2 class="text-3xl md:text-4xl font-bold text-gray-900 mb-4">
            How WellnessConnect Works
          </h2>
          <p class="text-xl text-gray-600 max-w-3xl mx-auto">
            Getting started with your wellness journey is simple and straightforward
          </p>
        </div>

        <div class="grid grid-cols-1 md:grid-cols-3 gap-8">
          <div v-for="(step, index) in steps" :key="step.title" class="text-center">
            <div class="relative mb-8">
              <div class="w-20 h-20 bg-gradient-to-br from-primary-500 to-secondary-500 rounded-full flex items-center justify-center mx-auto mb-4 shadow-lg">
                <span class="text-2xl font-bold text-white">{{ index + 1 }}</span>
              </div>
              <div v-if="index < steps.length - 1" class="hidden md:block absolute top-10 left-1/2 w-full h-0.5 bg-gradient-to-r from-primary-300 to-secondary-300 transform translate-x-10"></div>
            </div>
            <h3 class="text-xl font-semibold text-gray-900 mb-3">{{ step.title }}</h3>
            <p class="text-gray-600">{{ step.description }}</p>
          </div>
        </div>

        <div class="text-center mt-12">
          <NuxtLink to="/auth/signup" class="btn-primary">
            Get Started Now
          </NuxtLink>
        </div>
      </div>
    </section>

    <!-- Featured Professionals -->
    <section class="section-padding py-20 bg-white">
      <div class="container-max">
        <div class="text-center mb-16">
          <h2 class="text-3xl md:text-4xl font-bold text-gray-900 mb-4">
            Featured Wellness Professionals
          </h2>
          <p class="text-xl text-gray-600 max-w-3xl mx-auto">
            Meet some of our top-rated professionals who are ready to help you achieve your wellness goals
          </p>
        </div>

        <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-8">
          <div v-for="professional in featuredProfessionals" :key="professional.id" class="card group hover:shadow-xl transition-all duration-300">
            <div class="flex items-center mb-4">
              <img 
                :src="professional.image" 
                :alt="professional.name"
                class="w-16 h-16 rounded-full object-cover mr-4"
              />
              <div>
                <h3 class="text-lg font-semibold text-gray-900">{{ professional.name }}</h3>
                <p class="text-primary-600 font-medium">{{ professional.specialty }}</p>
              </div>
            </div>
            <p class="text-gray-600 mb-4">{{ professional.bio }}</p>
            <div class="flex items-center justify-between">
              <div class="flex items-center">
                <div class="flex text-yellow-400">
                  <StarIcon v-for="i in 5" :key="i" class="h-4 w-4 fill-current" />
                </div>
                <span class="ml-2 text-sm text-gray-600">{{ professional.rating }} ({{ professional.reviews }} reviews)</span>
              </div>
              <span class="text-lg font-semibold text-gray-900">${{ professional.rate }}/hr</span>
            </div>
            <NuxtLink 
              :to="`/professionals/${professional.id}`" 
              class="mt-4 w-full btn-primary text-center block"
            >
              View Profile
            </NuxtLink>
          </div>
        </div>

        <div class="text-center mt-12">
          <NuxtLink to="/professionals" class="btn-secondary">
            View All Professionals
          </NuxtLink>
        </div>
      </div>
    </section>

    <!-- CTA Section -->
    <section class="section-padding py-20 bg-gradient-to-br from-primary-600 to-secondary-600 text-white">
      <div class="container-max text-center">
        <h2 class="text-3xl md:text-4xl font-bold mb-4">
          Ready to Start Your Wellness Journey?
        </h2>
        <p class="text-xl opacity-90 mb-8 max-w-2xl mx-auto">
          Join thousands of people who have transformed their lives with the help of our certified wellness professionals.
        </p>
        <div class="flex flex-col sm:flex-row gap-4 justify-center">
          <NuxtLink to="/auth/signup" class="bg-white text-primary-600 hover:bg-gray-100 px-8 py-4 rounded-lg font-semibold text-lg transition-colors duration-200">
            Sign Up Free
          </NuxtLink>
          <NuxtLink to="/professionals" class="border-2 border-white text-white hover:bg-white hover:text-primary-600 px-8 py-4 rounded-lg font-semibold text-lg transition-all duration-200">
            Browse Professionals
          </NuxtLink>
        </div>
      </div>
    </section>
  </div>
</template>

<script setup>
import { 
  HeartIcon, 
  SparklesIcon, 
  AcademicCapIcon,
  ArrowRightIcon,
  StarIcon
} from '@heroicons/vue/24/outline'

// SEO
useHead({
  title: 'WellnessConnect - Find Your Perfect Wellness Professional',
  meta: [
    { 
      name: 'description', 
      content: 'Connect with certified yoga instructors, wellness coaches, and nutritionists. Start your wellness journey today with trusted professionals in your area.' 
    }
  ]
})

const services = [
  {
    title: 'Yoga Instruction',
    description: 'Find certified yoga instructors for all levels, from beginner to advanced. Improve flexibility, strength, and mindfulness.',
    icon: HeartIcon,
    link: '/professionals?category=yoga'
  },
  {
    title: 'Wellness Coaching',
    description: 'Work with experienced wellness coaches to develop healthy habits and achieve your personal wellness goals.',
    icon: SparklesIcon,
    link: '/professionals?category=wellness'
  },
  {
    title: 'Nutrition Guidance',
    description: 'Get personalized nutrition advice from certified nutritionists to optimize your diet and health.',
    icon: AcademicCapIcon,
    link: '/professionals?category=nutrition'
  }
]

const steps = [
  {
    title: 'Browse Professionals',
    description: 'Search and filter through our verified wellness professionals based on your location and needs.'
  },
  {
    title: 'Book a Session',
    description: 'Schedule a consultation or session directly through our platform with your chosen professional.'
  },
  {
    title: 'Start Your Journey',
    description: 'Begin working with your wellness professional to achieve your health and wellness goals.'
  }
]

const featuredProfessionals = [
  {
    id: 1,
    name: 'Sarah Johnson',
    specialty: 'Yoga Instructor',
    bio: 'Certified Hatha and Vinyasa yoga instructor with 8 years of experience helping clients improve flexibility and mindfulness.',
    image: 'https://images.pexels.com/photos/3823488/pexels-photo-3823488.jpeg?auto=compress&cs=tinysrgb&w=150',
    rating: 4.9,
    reviews: 127,
    rate: 75
  },
  {
    id: 2,
    name: 'Michael Chen',
    specialty: 'Wellness Coach',
    bio: 'Holistic wellness coach specializing in stress management and lifestyle optimization for busy professionals.',
    image: 'https://images.pexels.com/photos/3823495/pexels-photo-3823495.jpeg?auto=compress&cs=tinysrgb&w=150',
    rating: 4.8,
    reviews: 89,
    rate: 90
  },
  {
    id: 3,
    name: 'Dr. Emily Rodriguez',
    specialty: 'Nutritionist',
    bio: 'Registered dietitian with expertise in plant-based nutrition and sustainable eating habits for optimal health.',
    image: 'https://images.pexels.com/photos/3823509/pexels-photo-3823509.jpeg?auto=compress&cs=tinysrgb&w=150',
    rating: 5.0,
    reviews: 156,
    rate: 120
  }
]
</script>


================================================
FILE: pages/auth/login.vue
================================================
<template>
  <div class="min-h-screen bg-gradient-to-br from-primary-50 to-secondary-50 flex items-center justify-center section-padding py-12">
    <div class="max-w-md w-full">
      <div class="card">
        <!-- Header -->
        <div class="text-center mb-8">
          <NuxtLink to="/" class="inline-flex items-center space-x-2 mb-6">
            <div class="w-10 h-10 bg-gradient-to-br from-primary-500 to-secondary-500 rounded-lg flex items-center justify-center">
              <HeartIcon class="h-6 w-6 text-white" />
            </div>
            <span class="text-xl font-bold text-gray-900">WellnessConnect</span>
          </NuxtLink>
          <h1 class="text-2xl font-bold text-gray-900 mb-2">Welcome back</h1>
          <p class="text-gray-600">Sign in to your account to continue</p>
        </div>

        <!-- Form -->
        <form @submit.prevent="handleLogin" class="space-y-6">
          <div>
            <label for="email" class="block text-sm font-medium text-gray-700 mb-2">
              Email address
            </label>
            <input
              id="email"
              v-model="form.email"
              type="email"
              required
              class="w-full px-4 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-primary-500 focus:border-primary-500 transition-colors"
              placeholder="Enter your email"
            />
          </div>

          <div>
            <label for="password" class="block text-sm font-medium text-gray-700 mb-2">
              Password
            </label>
            <div class="relative">
              <input
                id="password"
                v-model="form.password"
                :type="showPassword ? 'text' : 'password'"
                required
                class="w-full px-4 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-primary-500 focus:border-primary-500 transition-colors pr-12"
                placeholder="Enter your password"
              />
              <button
                type="button"
                @click="showPassword = !showPassword"
                class="absolute right-3 top-1/2 transform -translate-y-1/2 text-gray-400 hover:text-gray-600"
              >
                <EyeIcon v-if="!showPassword" class="h-5 w-5" />
                <EyeSlashIcon v-else class="h-5 w-5" />
              </button>
            </div>
          </div>

          <div class="flex items-center justify-between">
            <div class="flex items-center">
              <input
                id="remember"
                v-model="form.remember"
                type="checkbox"
                class="h-4 w-4 text-primary-600 focus:ring-primary-500 border-gray-300 rounded"
              />
              <label for="remember" class="ml-2 block text-sm text-gray-700">
                Remember me
              </label>
            </div>
            <NuxtLink to="/auth/forgot-password" class="text-sm text-primary-600 hover:text-primary-700">
              Forgot password?
            </NuxtLink>
          </div>

          <button
            type="submit"
            :disabled="loading"
            class="w-full btn-primary disabled:opacity-50 disabled:cursor-not-allowed"
          >
            <span v-if="loading" class="inline-flex items-center">
              <svg class="animate-spin -ml-1 mr-3 h-5 w-5 text-white" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24">
                <circle class="opacity-25" cx="12" cy="12" r="10" stroke="currentColor" stroke-width="4"></circle>
                <path class="opacity-75" fill="currentColor" d="M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z"></path>
              </svg>
              Signing in...
            </span>
            <span v-else>Sign in</span>
          </button>
        </form>

        <!-- Divider -->
        <div class="my-6">
          <div class="relative">
            <div class="absolute inset-0 flex items-center">
              <div class="w-full border-t border-gray-300"></div>
            </div>
            <div class="relative flex justify-center text-sm">
              <span class="px-2 bg-white text-gray-500">Or continue with</span>
            </div>
          </div>
        </div>

        <!-- Social Login -->
        <div class="grid grid-cols-2 gap-3">
          <button
            type="button"
            class="w-full inline-flex justify-center py-3 px-4 border border-gray-300 rounded-lg shadow-sm bg-white text-sm font-medium text-gray-500 hover:bg-gray-50 transition-colors"
          >
            <svg class="h-5 w-5" viewBox="0 0 24 24">
              <path fill="currentColor" d="M22.56 12.25c0-.78-.07-1.53-.2-2.25H12v4.26h5.92c-.26 1.37-1.04 2.53-2.21 3.31v2.77h3.57c2.08-1.92 3.28-4.74 3.28-8.09z"/>
              <path fill="currentColor" d="M12 23c2.97 0 5.46-.98 7.28-2.66l-3.57-2.77c-.98.66-2.23 1.06-3.71 1.06-2.86 0-5.29-1.93-6.16-4.53H2.18v2.84C3.99 20.53 7.7 23 12 23z"/>
              <path fill="currentColor" d="M5.84 14.09c-.22-.66-.35-1.36-.35-2.09s.13-1.43.35-2.09V7.07H2.18C1.43 8.55 1 10.22 1 12s.43 3.45 1.18 4.93l2.85-2.22.81-.62z"/>
              <path fill="currentColor" d="M12 5.38c1.62 0 3.06.56 4.21 1.64l3.15-3.15C17.45 2.09 14.97 1 12 1 7.7 1 3.99 3.47 2.18 7.07l3.66 2.84c.87-2.6 3.3-4.53 6.16-4.53z"/>
            </svg>
            Google
          </button>
          <button
            type="button"
            class="w-full inline-flex justify-center py-3 px-4 border border-gray-300 rounded-lg shadow-sm bg-white text-sm font-medium text-gray-500 hover:bg-gray-50 transition-colors"
          >
            <svg class="h-5 w-5" fill="currentColor" viewBox="0 0 24 24">
              <path d="M24 12.073c0-6.627-5.373-12-12-12s-12 5.373-12 12c0 5.99 4.388 10.954 10.125 11.854v-8.385H7.078v-3.47h3.047V9.43c0-3.007 1.792-4.669 4.533-4.669 1.312 0 2.686.235 2.686.235v2.953H15.83c-1.491 0-1.956.925-1.956 1.874v2.25h3.328l-.532 3.47h-2.796v8.385C19.612 23.027 24 18.062 24 12.073z"/>
            </svg>
            Facebook
          </button>
        </div>

        <!-- Sign up link -->
        <div class="mt-6 text-center">
          <span class="text-gray-600">Don't have an account?</span>
          <NuxtLink to="/auth/signup" class="ml-1 text-primary-600 hover:text-primary-700 font-medium">
            Sign up
          </NuxtLink>
        </div>
      </div>
    </div>
  </div>
</template>

<script setup>
import { HeartIcon, EyeIcon, EyeSlashIcon } from '@heroicons/vue/24/outline'

// SEO
useHead({
  title: 'Login - WellnessConnect',
  meta: [
    { name: 'description', content: 'Sign in to your WellnessConnect account' }
  ]
})

// Form data
const form = ref({
  email: '',
  password: '',
  remember: false
})

const showPassword = ref(false)
const loading = ref(false)

// Methods
const handleLogin = async () => {
  loading.value = true
  
  try {
    // Simulate API call
    await new Promise(resolve => setTimeout(resolve, 1000))
    
    // Here you would make the actual API call
    // const response = await $fetch('/api/auth/login', {
    //   method: 'POST',
    //   body: form.value
    // })
    
    // Redirect to dashboard or home
    await navigateTo('/dashboard')
  } catch (error) {
    console.error('Login error:', error)
    // Handle error (show notification, etc.)
  } finally {
    loading.value = false
  }
}

// Redirect if already authenticated
// onMounted(() => {
//   const { isAuthenticated } = useAuth()
//   if (isAuthenticated.value) {
//     navigateTo('/dashboard')
//   }
// })
</script>


================================================
FILE: pages/auth/signup.vue
================================================
<template>
  <div class="min-h-screen bg-gradient-to-br from-primary-50 to-secondary-50 flex items-center justify-center section-padding py-12">
    <div class="max-w-md w-full">
      <div class="card">
        <!-- Header -->
        <div class="text-center mb-8">
          <NuxtLink to="/" class="inline-flex items-center space-x-2 mb-6">
            <div class="w-10 h-10 bg-gradient-to-br from-primary-500 to-secondary-500 rounded-lg flex items-center justify-center">
              <HeartIcon class="h-6 w-6 text-white" />
            </div>
            <span class="text-xl font-bold text-gray-900">WellnessConnect</span>
          </NuxtLink>
          <h1 class="text-2xl font-bold text-gray-900 mb-2">Create your account</h1>
          <p class="text-gray-600">Join our wellness community today</p>
        </div>

        <!-- Form -->
        <form @submit.prevent="handleSignup" class="space-y-6">
          <div class="grid grid-cols-2 gap-4">
            <div>
              <label for="firstName" class="block text-sm font-medium text-gray-700 mb-2">
                First name
              </label>
              <input
                id="firstName"
                v-model="form.firstName"
                type="text"
                required
                class="w-full px-4 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-primary-500 focus:border-primary-500 transition-colors"
                placeholder="First name"
              />
            </div>
            <div>
              <label for="lastName" class="block text-sm font-medium text-gray-700 mb-2">
                Last name
              </label>
              <input
                id="lastName"
                v-model="form.lastName"
                type="text"
                required
                class="w-full px-4 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-primary-500 focus:border-primary-500 transition-colors"
                placeholder="Last name"
              />
            </div>
          </div>

          <div>
            <label for="email" class="block text-sm font-medium text-gray-700 mb-2">
              Email address
            </label>
            <input
              id="email"
              v-model="form.email"
              type="email"
              required
              class="w-full px-4 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-primary-500 focus:border-primary-500 transition-colors"
              placeholder="Enter your email"
            />
          </div>

          <div>
            <label for="password" class="block text-sm font-medium text-gray-700 mb-2">
              Password
            </label>
            <div class="relative">
              <input
                id="password"
                v-model="form.password"
                :type="showPassword ? 'text' : 'password'"
                required
                class="w-full px-4 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-primary-500 focus:border-primary-500 transition-colors pr-12"
                placeholder="Create a password"
              />
              <button
                type="button"
                @click="showPassword = !showPassword"
                class="absolute right-3 top-1/2 transform -translate-y-1/2 text-gray-400 hover:text-gray-600"
              >
                <EyeIcon v-if="!showPassword" class="h-5 w-5" />
                <EyeSlashIcon v-else class="h-5 w-5" />
              </button>
            </div>
            <div class="mt-2">
              <div class="flex items-center space-x-2 text-xs">
                <div class="flex-1 bg-gray-200 rounded-full h-1">
                  <div 
                    class="h-1 rounded-full transition-all duration-300"
                    :class="passwordStrengthColor"
                    :style="{ width: passwordStrength + '%' }"
                  ></div>
                </div>
                <span class="text-gray-500">{{ passwordStrengthText }}</span>
              </div>
            </div>
          </div>

          <div>
            <label for="userType" class="block text-sm font-medium text-gray-700 mb-2">
              I am a
            </label>
            <select
              id="userType"
              v-model="form.userType"
              required
              class="w-full px-4 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-primary-500 focus:border-primary-500 transition-colors"
            >
              <option value="">Select user type</option>
              <option value="client">Client (Looking for wellness services)</option>
              <option value="professional">Professional (Providing wellness services)</option>
            </select>
          </div>

          <div class="flex items-start">
            <input
              id="terms"
              v-model="form.acceptTerms"
              type="checkbox"
              required
              class="h-4 w-4 text-primary-600 focus:ring-primary-500 border-gray-300 rounded mt-1"
            />
            <label for="terms" class="ml-2 block text-sm text-gray-700">
              I agree to the 
              <NuxtLink to="/terms" class="text-primary-600 hover:text-primary-700">Terms of Service</NuxtLink>
              and 
              <NuxtLink to="/privacy" class="text-primary-600 hover:text-primary-700">Privacy Policy</NuxtLink>
            </label>
          </div>

          <button
            type="submit"
            :disabled="loading || !isFormValid"
            class="w-full btn-primary disabled:opacity-50 disabled:cursor-not-allowed"
          >
            <span v-if="loading" class="inline-flex items-center">
              <svg class="animate-spin -ml-1 mr-3 h-5 w-5 text-white" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24">
                <circle class="opacity-25" cx="12" cy="12" r="10" stroke="currentColor" stroke-width="4"></circle>
                <path class="opacity-75" fill="currentColor" d="M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z"></path>
              </svg>
              Creating account...
            </span>
            <span v-else>Create account</span>
          </button>
        </form>

        <!-- Divider -->
        <div class="my-6">
          <div class="relative">
            <div class="absolute inset-0 flex items-center">
              <div class="w-full border-t border-gray-300"></div>
            </div>
            <div class="relative flex justify-center text-sm">
              <span class="px-2 bg-white text-gray-500">Or continue with</span>
            </div>
          </div>
        </div>

        <!-- Social Login -->
        <div class="grid grid-cols-2 gap-3">
          <button
            type="button"
            class="w-full inline-flex justify-center py-3 px-4 border border-gray-300 rounded-lg shadow-sm bg-white text-sm font-medium text-gray-500 hover:bg-gray-50 transition-colors"
          >
            <svg class="h-5 w-5" viewBox="0 0 24 24">
              <path fill="currentColor" d="M22.56 12.25c0-.78-.07-1.53-.2-2.25H12v4.26h5.92c-.26 1.37-1.04 2.53-2.21 3.31v2.77h3.57c2.08-1.92 3.28-4.74 3.28-8.09z"/>
              <path fill="currentColor" d="M12 23c2.97 0 5.46-.98 7.28-2.66l-3.57-2.77c-.98.66-2.23 1.06-3.71 1.06-2.86 0-5.29-1.93-6.16-4.53H2.18v2.84C3.99 20.53 7.7 23 12 23z"/>
              <path fill="currentColor" d="M5.84 14.09c-.22-.66-.35-1.36-.35-2.09s.13-1.43.35-2.09V7.07H2.18C1.43 8.55 1 10.22 1 12s.43 3.45 1.18 4.93l2.85-2.22.81-.62z"/>
              <path fill="currentColor" d="M12 5.38c1.62 0 3.06.56 4.21 1.64l3.15-3.15C17.45 2.09 14.97 1 12 1 7.7 1 3.99 3.47 2.18 7.07l3.66 2.84c.87-2.6 3.3-4.53 6.16-4.53z"/>
            </svg>
            Google
          </button>
          <button
            type="button"
            class="w-full inline-flex justify-center py-3 px-4 border border-gray-300 rounded-lg shadow-sm bg-white text-sm font-medium text-gray-500 hover:bg-gray-50 transition-colors"
          >
            <svg class="h-5 w-5" fill="currentColor" viewBox="0 0 24 24">
              <path d="M24 12.073c0-6.627-5.373-12-12-12s-12 5.373-12 12c0 5.99 4.388 10.954 10.125 11.854v-8.385H7.078v-3.47h3.047V9.43c0-3.007 1.792-4.669 4.533-4.669 1.312 0 2.686.235 2.686.235v2.953H15.83c-1.491 0-1.956.925-1.956 1.874v2.25h3.328l-.532 3.47h-2.796v8.385C19.612 23.027 24 18.062 24 12.073z"/>
            </svg>
            Facebook
          </button>
        </div>

        <!-- Login link -->
        <div class="mt-6 text-center">
          <span class="text-gray-600">Already have an account?</span>
          <NuxtLink to="/auth/login" class="ml-1 text-primary-600 hover:text-primary-700 font-medium">
            Sign in
          </NuxtLink>
        </div>
      </div>
    </div>
  </div>
</template>

<script setup>
import { HeartIcon, EyeIcon, EyeSlashIcon } from '@heroicons/vue/24/outline'

// SEO
useHead({
  title: 'Sign Up - WellnessConnect',
  meta: [
    { name: 'description', content: 'Create your WellnessConnect account and start your wellness journey' }
  ]
})

// Form data
const form = ref({
  firstName: '',
  lastName: '',
  email: '',
  password: '',
  userType: '',
  acceptTerms: false
})

const showPassword = ref(false)
const loading = ref(false)

// Password strength
const passwordStrength = computed(() => {
  const password = form.value.password
  if (!password) return 0
  
  let strength = 0
  if (password.length >= 8) strength += 25
  if (/[a-z]/.test(password)) strength += 25
  if (/[A-Z]/.test(password)) strength += 25
  if (/[0-9]/.test(password)) strength += 25
  
  return strength
})

const passwordStrengthText = computed(() => {
  const strength = passwordStrength.value
  if (strength === 0) return ''
  if (strength < 50) return 'Weak'
  if (strength < 75) return 'Fair'
  if (strength < 100) return 'Good'
  return 'Strong'
})

const passwordStrengthColor = computed(() => {
  const strength = passwordStrength.value
  if (strength < 50) return 'bg-red-500'
  if (strength < 75) return 'bg-yellow-500'
  if (strength < 100) return 'bg-blue-500'
  return 'bg-green-500'
})

const isFormValid = computed(() => {
  return form.value.firstName &&
         form.value.lastName &&
         form.value.email &&
         form.value.password &&
         form.value.userType &&
         form.value.acceptTerms &&
         passwordStrength.value >= 50
})

// Methods
const handleSignup = async () => {
  loading.value = true
  
  try {
    // Simulate API call
    await new Promise(resolve => setTimeout(resolve, 1500))
    
    // Here you would make the actual API call
    // const response = await $fetch('/api/auth/signup', {
    //   method: 'POST',
    //   body: form.value
    // })
    
    // Redirect based on user type
    if (form.value.userType === 'professional') {
      await navigateTo('/onboarding/professional')
    } else {
      await navigateTo('/onboarding/client')
    }
  } catch (error) {
    console.error('Signup error:', error)
    // Handle error (show notification, etc.)
  } finally {
    loading.value = false
  }
}
</script>


================================================
FILE: pages/dashboard/index.vue
================================================
<template>
  <div class="section-padding py-8">
    <div class="container-max">
      <!-- Header -->
      <div class="mb-8">
        <h1 class="text-3xl font-bold text-gray-900 mb-2">
          Welcome back, {{ user.name }}!
        </h1>
        <p class="text-gray-600">
          Here's what's happening with your wellness journey
        </p>
      </div>

      <!-- Stats Cards -->
      <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-6 mb-8">
        <div v-for="stat in stats" :key="stat.title" class="card">
          <div class="flex items-center">
            <div class="p-3 rounded-lg" :class="stat.bgColor">
              <component :is="stat.icon" class="h-6 w-6" :class="stat.iconColor" />
            </div>
            <div class="ml-4">
              <p class="text-sm font-medium text-gray-600">{{ stat.title }}</p>
              <p class="text-2xl font-bold text-gray-900">{{ stat.value }}</p>
            </div>
          </div>
        </div>
      </div>

      <div class="grid grid-cols-1 lg:grid-cols-3 gap-8">
        <!-- Upcoming Appointments -->
        <div class="lg:col-span-2">
          <div class="card">
            <div class="flex items-center justify-between mb-6">
              <h2 class="text-xl font-semibold text-gray-900">Upcoming Appointments</h2>
              <NuxtLink to="/dashboard/appointments" class="text-primary-600 hover:text-primary-700 font-medium">
                View all
              </NuxtLink>
            </div>
            
            <div class="space-y-4">
              <div v-for="appointment in upcomingAppointments" :key="appointment.id" class="flex items-center p-4 bg-gray-50 rounded-lg">
                <img 
                  :src="appointment.professional.image" 
                  :alt="appointment.professional.name"
                  class="w-12 h-12 rounded-full object-cover"
                />
                <div class="ml-4 flex-1">
                  <h3 class="font-medium text-gray-900">{{ appointment.service }}</h3>
                  <p class="text-sm text-gray-600">with {{ appointment.professional.name }}</p>
                  <div class="flex items-center text-sm text-gray-500 mt-1">
                    <CalendarIcon class="h-4 w-4 mr-1" />
                    {{ formatDate(appointment.date) }}
                    <ClockIcon class="h-4 w-4 ml-3 mr-1" />
                    {{ appointment.time }}
                  </div>
                </div>
                <div class="flex space-x-2">
                  <button class="btn-outline text-sm px-3 py-1">
                    Reschedule
                  </button>
                  <button class="bg-primary-100 text-primary-700 hover:bg-primary-200 px-3 py-1 rounded text-sm font-medium transition-colors">
                    Join
                  </button>
                </div>
              </div>
            </div>

            <div v-if="upcomingAppointments.length === 0" class="text-center py-8">
              <CalendarIcon class="h-12 w-12 text-gray-400 mx-auto mb-4" />
              <h3 class="text-lg font-medium text-gray-900 mb-2">No upcoming appointments</h3>
              <p class="text-gray-600 mb-4">Book a session with one of our wellness professionals</p>
              <NuxtLink to="/professionals" class="btn-primary">
                Find Professionals
              </NuxtLink>
            </div>
          </div>
        </div>

        <!-- Quick Actions -->
        <div class="space-y-6">
          <!-- Quick Actions Card -->
          <div class="card">
            <h3 class="text-lg font-semibold text-gray-900 mb-4">Quick Actions</h3>
            <div class="space-y-3">
              <NuxtLink to="/professionals" class="flex items-center p-3 bg-primary-50 hover:bg-primary-100 rounded-lg transition-colors group">
                <div class="w-10 h-10 bg-primary-100 group-hover:bg-primary-200 rounded-lg flex items-center justify-center">
                  <UserGroupIcon class="h-5 w-5 text-primary-600" />
                </div>
                <div class="ml-3">
                  <p class="font-medium text-gray-900">Find Professionals</p>
                  <p class="text-sm text-gray-600">Browse wellness experts</p>
                </div>
              </NuxtLink>
              
              <NuxtLink to="/dashboard/appointments/new" class="flex items-center p-3 bg-secondary-50 hover:bg-secondary-100 rounded-lg transition-colors group">
                <div class="w-10 h-10 bg-secondary-100 group-hover:bg-secondary-200 rounded-lg flex items-center justify-center">
                  <CalendarPlusIcon class="h-5 w-5 text-secondary-600" />
                </div>
                <div class="ml-3">
                  <p class="font-medium text-gray-900">Book Appointment</p>
                  <p class="text-sm text-gray-600">Schedule a session</p>
                </div>
              </NuxtLink>
              
              <NuxtLink to="/dashboard/profile" class="flex items-center p-3 bg-accent-50 hover:bg-accent-100 rounded-lg transition-colors group">
                <div class="w-10 h-10 bg-accent-100 group-hover:bg-accent-200 rounded-lg flex items-center justify-center">
                  <CogIcon class="h-5 w-5 text-accent-600" />
                </div>
                <div class="ml-3">
                  <p class="font-medium text-gray-900">Profile Settings</p>
                  <p class="text-sm text-gray-600">Update your info</p>
                </div>
              </NuxtLink>
            </div>
          </div>

          <!-- Recent Activity -->
          <div class="card">
            <h3 class="text-lg font-semibold text-gray-900 mb-4">Recent Activity</h3>
            <div class="space-y-3">
              <div v-for="activity in recentActivity" :key="activity.id" class="flex items-start">
                <div class="w-8 h-8 rounded-full flex items-center justify-center mr-3" :class="activity.bgColor">
                  <component :is="activity.icon" class="h-4 w-4" :class="activity.iconColor" />
                </div>
                <div class="flex-1 min-w-0">
                  <p class="text-sm text-gray-900">{{ activity.text }}</p>
                  <p class="text-xs text-gray-500">{{ activity.time }}</p>
                </div>
              </div>
            </div>
          </div>
        </div>
      </div>
    </div>
  </div>
</template>

<script setup>
import { 
  CalendarIcon,
  ClockIcon,
  UserGroupIcon,
  CalendarPlusIcon,
  CogIcon,
  HeartIcon,
  StarIcon,
  CheckCircleIcon
} from '@heroicons/vue/24/outline'

// SEO
useHead({
  title: 'Dashboard - WellnessConnect',
  meta: [
    { name: 'description', content: 'Your personal wellness dashboard' }
  ]
})

// Mock user data
const user = ref({
  name: 'John Doe',
  email: 'john@example.com',
  memberSince: '2024-01-15'
})

const stats = ref([
  {
    title: 'Total Sessions',
    value: '24',
    icon: HeartIcon,
    bgColor: 'bg-primary-100',
    iconColor: 'text-primary-600'
  },
  {
    title: 'Favorite Professionals',
    value: '3',
    icon: StarIcon,
    bgColor: 'bg-secondary-100',
    iconColor: 'text-secondary-600'
  },
  {
    title: 'Completed Goals',
    value: '8',
    icon: CheckCircleIcon,
    bgColor: 'bg-accent-100',
    iconColor: 'text-accent-600'
  },
  {
    title: 'This Month',
    value: '5',
    icon: CalendarIcon,
    bgColor: 'bg-green-100',
    iconColor: 'text-green-600'
  }
])

const upcomingAppointments = ref([
  {
    id: 1,
    service: 'Hatha Yoga Session',
    professional: {
      name: 'Sarah Johnson',
      image: 'https://images.pexels.com/photos/3823488/pexels-photo-3823488.jpeg?auto=compress&cs=tinysrgb&w=150'
    },
    date: '2024-01-20T10:00:00Z',
    time: '10:00 AM',
    status: 'confirmed'
  },
  {
    id: 2,
    service: 'Nutrition Consultation',
    professional: {
      name: 'Dr. Emily Rodriguez',
      image: 'https://images.pexels.com/photos/3823509/pexels-photo-3823509.jpeg?auto=compress&cs=tinysrgb&w=150'
    },
    date: '2024-01-22T14:00:00Z',
    time: '2:00 PM',
    status: 'confirmed'
  }
])

const recentActivity = ref([
  {
    id: 1,
    text: 'Completed yoga session with Sarah Johnson',
    time: '2 hours ago',
    icon: CheckCircleIcon,
    bgColor: 'bg-green-100',
    iconColor: 'text-green-600'
  },
  {
    id: 2,
    text: 'Booked appointment with Dr. Emily Rodriguez',
    time: '1 day ago',
    icon: CalendarPlusIcon,
    bgColor: 'bg-blue-100',
    iconColor: 'text-blue-600'
  },
  {
    id: 3,
    text: 'Left a 5-star review for Michael Chen',
    time: '3 days ago',
    icon: StarIcon,
    bgColor: 'bg-yellow-100',
    iconColor: 'text-yellow-600'
  }
])

// Utility functions
const formatDate = (dateString) => {
  return new Date(dateString).toLocaleDateString('en-US', {
    weekday: 'long',
    year: 'numeric',
    month: 'long',
    day: 'numeric'
  })
}

// Check authentication
definePageMeta({
  middleware: 'auth'
})
</script>


================================================
FILE: pages/professionals/index.vue
================================================
<template>
  <div class="section-padding py-12">
    <div class="container-max">
      <!-- Header -->
      <div class="mb-8">
        <h1 class="text-3xl md:text-4xl font-bold text-gray-900 mb-4">
          Find Wellness Professionals
        </h1>
        <p class="text-xl text-gray-600">
          Browse through our network of certified wellness professionals
        </p>
      </div>

      <div class="grid grid-cols-1 lg:grid-cols-4 gap-8">
        <!-- Filters Sidebar -->
        <div class="lg:col-span-1">
          <div class="card sticky top-24">
            <h3 class="text-lg font-semibold text-gray-900 mb-4">Filters</h3>
            
            <!-- Search -->
            <div class="mb-6">
              <label class="block text-sm font-medium text-gray-700 mb-2">Search</label>
              <input 
                v-model="filters.search"
                type="text" 
                placeholder="Search by name or specialty"
                class="w-full px-4 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-primary-500 focus:border-primary-500"
              />
            </div>

            <!-- Category -->
            <div class="mb-6">
              <label class="block text-sm font-medium text-gray-700 mb-2">Category</label>
              <select 
                v-model="filters.category"
                class="w-full px-4 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-primary-500 focus:border-primary-500"
              >
                <option value="">All Categories</option>
                <option value="yoga">Yoga Instruction</option>
                <option value="wellness">Wellness Coaching</option>
                <option value="nutrition">Nutrition</option>
                <option value="fitness">Fitness Training</option>
              </select>
            </div>

            <!-- Location -->
            <div class="mb-6">
              <label class="block text-sm font-medium text-gray-700 mb-2">Location</label>
              <input 
                v-model="filters.location"
                type="text" 
                placeholder="Enter city or zip code"
                class="w-full px-4 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-primary-500 focus:border-primary-500"
              />
            </div>

            <!-- Price Range -->
            <div class="mb-6">
              <label class="block text-sm font-medium text-gray-700 mb-2">
                Price Range: ${{ filters.priceRange[0] }} - ${{ filters.priceRange[1] }}/hour
              </label>
              <input 
                v-model="filters.priceRange[0]"
                type="range" 
                min="25" 
                max="200" 
                class="w-full mb-2"
              />
              <input 
                v-model="filters.priceRange[1]"
                type="range" 
                min="25" 
                max="200" 
                class="w-full"
              />
            </div>

            <!-- Rating -->
            <div class="mb-6">
              <label class="block text-sm font-medium text-gray-700 mb-2">Minimum Rating</label>
              <select 
                v-model="filters.rating"
                class="w-full px-4 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-primary-500 focus:border-primary-500"
              >
                <option value="0">Any Rating</option>
                <option value="4">4+ Stars</option>
                <option value="4.5">4.5+ Stars</option>
                <option value="4.8">4.8+ Stars</option>
              </select>
            </div>

            <button @click="clearFilters" class="w-full btn-outline">
              Clear Filters
            </button>
          </div>
        </div>

        <!-- Results -->
        <div class="lg:col-span-3">
          <!-- Sort and Results Count -->
          <div class="flex flex-col sm:flex-row justify-between items-center mb-6">
            <p class="text-gray-600 mb-4 sm:mb-0">
              Showing {{ filteredProfessionals.length }} of {{ professionals.length }} professionals
            </p>
            <select 
              v-model="sortBy"
              class="px-4 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-primary-500 focus:border-primary-500"
            >
              <option value="rating">Sort by Rating</option>
              <option value="price-low">Price: Low to High</option>
              <option value="price-high">Price: High to Low</option>
              <option value="reviews">Most Reviews</option>
            </select>
          </div>

          <!-- Professional Cards -->
          <div class="grid grid-cols-1 xl:grid-cols-2 gap-6">
            <div v-for="professional in paginatedProfessionals" :key="professional.id" class="card hover:shadow-xl transition-all duration-300">
              <div class="flex items-start space-x-4">
                <img 
                  :src="professional.image" 
                  :alt="professional.name"
                  class="w-20 h-20 rounded-full object-cover flex-shrink-0"
                />
                <div class="flex-1 min-w-0">
                  <div class="flex items-start justify-between">
                    <div>
                      <h3 class="text-lg font-semibold text-gray-900">{{ professional.name }}</h3>
                      <p class="text-primary-600 font-medium">{{ professional.specialty }}</p>
                      <p class="text-sm text-gray-500">{{ professional.location }}</p>
                    </div>
                    <div class="text-right flex-shrink-0">
                      <div class="text-lg font-semibold text-gray-900 mb-1">
                        ${{ professional.rate }}/hr
                      </div>
                      <div class="flex items-center">
                        <div class="flex text-yellow-400 mr-1">
                          <StarIcon v-for="i in 5" :key="i" class="h-4 w-4 fill-current" />
                        </div>
                        <span class="text-sm text-gray-600">{{ professional.rating }}</span>
                      </div>
                    </div>
                  </div>
                  
                  <p class="text-gray-600 text-sm mt-2 line-clamp-2">{{ professional.bio }}</p>
                  
                  <div class="flex flex-wrap gap-2 mt-3">
                    <span 
                      v-for="skill in professional.skills.slice(0, 3)" 
                      :key="skill"
                      class="bg-primary-100 text-primary-700 text-xs px-2 py-1 rounded-full"
                    >
                      {{ skill }}
                    </span>
                  </div>
                  
                  <div class="flex items-center justify-between mt-4">
                    <div class="text-sm text-gray-500">
                      {{ professional.reviews }} reviews • {{ professional.experience }} years exp.
                    </div>
                    <div class="flex space-x-2">
                      <NuxtLink 
                        :to="`/professionals/${professional.id}`"
                        class="btn-outline text-sm px-4 py-2"
                      >
                        View Profile
                      </NuxtLink>
                      <button class="btn-primary text-sm px-4 py-2">
                        Book Now
                      </button>
                    </div>
                  </div>
                </div>
              </div>
            </div>
          </div>

          <!-- Pagination -->
          <div v-if="totalPages > 1" class="flex justify-center mt-8">
            <nav class="flex space-x-2">
              <button 
                @click="currentPage = Math.max(1, currentPage - 1)"
                :disabled="currentPage === 1"
                class="px-4 py-2 border border-gray-300 rounded-lg disabled:opacity-50 disabled:cursor-not-allowed hover:bg-gray-50"
              >
                Previous
              </button>
              <button 
                v-for="page in visiblePages" 
                :key="page"
                @click="currentPage = page"
                :class="[
                  'px-4 py-2 border rounded-lg',
                  currentPage === page 
                    ? 'bg-primary-600 text-white border-primary-600' 
                    : 'border-gray-300 hover:bg-gray-50'
                ]"
              >
                {{ page }}
              </button>
              <button 
                @click="currentPage = Math.min(totalPages, currentPage + 1)"
                :disabled="currentPage === totalPages"
                class="px-4 py-2 border border-gray-300 rounded-lg disabled:opacity-50 disabled:cursor-not-allowed hover:bg-gray-50"
              >
                Next
              </button>
            </nav>
          </div>
        </div>
      </div>
    </div>
  </div>
</template>

<script setup>
import { StarIcon } from '@heroicons/vue/24/solid'

// SEO
useHead({
  title: 'Find Wellness Professionals - WellnessConnect',
  meta: [
    { name: 'description', content: 'Browse certified wellness professionals near you. Find yoga instructors, wellness coaches, and nutritionists.' }
  ]
})

// Reactive data
const filters = ref({
  search: '',
  category: '',
  location: '',
  priceRange: [25, 200],
  rating: 0
})

const sortBy = ref('rating')
const currentPage = ref(1)
const itemsPerPage = 6

// Sample data - this would come from API
const professionals = ref([
  {
    id: 1,
    name: 'Sarah Johnson',
    specialty: 'Yoga Instructor',
    location: 'San Francisco, CA',
    bio: 'Certified Hatha and Vinyasa yoga instructor with 8 years of experience helping clients improve flexibility and mindfulness through personalized practice.',
    image: 'https://images.pexels.com/photos/3823488/pexels-photo-3823488.jpeg?auto=compress&cs=tinysrgb&w=150',
    rating: 4.9,
    reviews: 127,
    rate: 75,
    experience: 8,
    skills: ['Hatha Yoga', 'Vinyasa', 'Meditation', 'Breathwork']
  },
  {
    id: 2,
    name: 'Michael Chen',
    specialty: 'Wellness Coach',
    location: 'New York, NY',
    bio: 'Holistic wellness coach specializing in stress management and lifestyle optimization for busy professionals seeking work-life balance.',
    image: 'https://images.pexels.com/photos/3823495/pexels-photo-3823495.jpeg?auto=compress&cs=tinysrgb&w=150',
    rating: 4.8,
    reviews: 89,
    rate: 90,
    experience: 6,
    skills: ['Stress Management', 'Life Coaching', 'Mindfulness', 'Goal Setting']
  },
  {
    id: 3,
    name: 'Dr. Emily Rodriguez',
    specialty: 'Nutritionist',
    location: 'Los Angeles, CA',
    bio: 'Registered dietitian with expertise in plant-based nutrition and sustainable eating habits for optimal health and longevity.',
    image: 'https://images.pexels.com/photos/3823509/pexels-photo-3823509.jpeg?auto=compress&cs=tinysrgb&w=150',
    rating: 5.0,
    reviews: 156,
    rate: 120,
    experience: 10,
    skills: ['Plant-Based Nutrition', 'Weight Management', 'Sports Nutrition', 'Meal Planning']
  },
  {
    id: 4,
    name: 'David Kim',
    specialty: 'Fitness Trainer',
    location: 'Chicago, IL',
    bio: 'Certified personal trainer focused on functional fitness and strength training for all fitness levels and ages.',
    image: 'https://images.pexels.com/photos/3823511/pexels-photo-3823511.jpeg?auto=compress&cs=tinysrgb&w=150',
    rating: 4.7,
    reviews: 93,
    rate: 80,
    experience: 5,
    skills: ['Strength Training', 'Functional Fitness', 'HIIT', 'Mobility']
  },
  {
    id: 5,
    name: 'Lisa Thompson',
    specialty: 'Wellness Coach',
    location: 'Austin, TX',
    bio: 'Experienced wellness coach helping clients develop sustainable healthy habits and overcome limiting beliefs.',
    image: 'https://images.pexels.com/photos/3823513/pexels-photo-3823513.jpeg?auto=compress&cs=tinysrgb&w=150',
    rating: 4.9,
    reviews: 112,
    rate: 85,
    experience: 7,
    skills: ['Habit Formation', 'Mindset Coaching', 'Nutrition Coaching', 'Accountability']
  },
  {
    id: 6,
    name: 'James Wilson',
    specialty: 'Yoga Instructor',
    location: 'Seattle, WA',
    bio: 'Advanced yoga practitioner specializing in Ashtanga and power yoga for building strength and flexibility.',
    image: 'https://images.pexels.com/photos/3823515/pexels-photo-3823515.jpeg?auto=compress&cs=tinysrgb&w=150',
    rating: 4.6,
    reviews: 78,
    rate: 70,
    experience: 4,
    skills: ['Ashtanga Yoga', 'Power Yoga', 'Alignment', 'Philosophy']
  }
])

// Computed properties
const filteredProfessionals = computed(() => {
  let filtered = professionals.value

  // Search filter
  if (filters.value.search) {
    const search = filters.value.search.toLowerCase()
    filtered = filtered.filter(p => 
      p.name.toLowerCase().includes(search) || 
      p.specialty.toLowerCase().includes(search) ||
      p.skills.some(skill => skill.toLowerCase().includes(search))
    )
  }

  // Category filter
  if (filters.value.category) {
    filtered = filtered.filter(p => {
      const category = filters.value.category.toLowerCase()
      return p.specialty.toLowerCase().includes(category)
    })
  }

  // Location filter
  if (filters.value.location) {
    const location = filters.value.location.toLowerCase()
    filtered = filtered.filter(p => 
      p.location.toLowerCase().includes(location)
    )
  }

  // Price range filter
  filtered = filtered.filter(p => 
    p.rate >= filters.value.priceRange[0] && 
    p.rate <= filters.value.priceRange[1]
  )

  // Rating filter
  if (filters.value.rating > 0) {
    filtered = filtered.filter(p => p.rating >= filters.value.rating)
  }

  // Sort
  filtered.sort((a, b) => {
    switch (sortBy.value) {
      case 'rating':
        return b.rating - a.rating
      case 'price-low':
        return a.rate - b.rate
      case 'price-high':
        return b.rate - a.rate
      case 'reviews':
        return b.reviews - a.reviews
      default:
        return 0
    }
  })

  return filtered
})

const totalPages = computed(() => Math.ceil(filteredProfessionals.value.length / itemsPerPage))

const paginatedProfessionals = computed(() => {
  const start = (currentPage.value - 1) * itemsPerPage
  const end = start + itemsPerPage
  return filteredProfessionals.value.slice(start, end)
})

const visiblePages = computed(() => {
  const pages = []
  const total = totalPages.value
  const current = currentPage.value
  
  if (total <= 7) {
    for (let i = 1; i <= total; i++) {
      pages.push(i)
    }
  } else {
    if (current <= 4) {
      for (let i = 1; i <= 5; i++) {
        pages.push(i)
      }
      pages.push('...', total)
    } else if (current >= total - 3) {
      pages.push(1, '...')
      for (let i = total - 4; i <= total; i++) {
        pages.push(i)
      }
    } else {
      pages.push(1, '...')
      for (let i = current - 1; i <= current + 1; i++) {
        pages.push(i)
      }
      pages.push('...', total)
    }
  }
  
  return pages.filter(p => p !== '...' || pages.indexOf(p) === pages.lastIndexOf(p))
})

// Methods
const clearFilters = () => {
  filters.value = {
    search: '',
    category: '',
    location: '',
    priceRange: [25, 200],
    rating: 0
  }
  currentPage.value = 1
}

// Watch for filter changes to reset pagination
watch(() => [filters.value, sortBy.value], () => {
  currentPage.value = 1
}, { deep: true })
</script>

<style scoped>
.line-clamp-2 {
  display: -webkit-box;
  -webkit-line-clamp: 2;
  -webkit-box-orient: vertical;
  overflow: hidden;
}
</style>


================================================
FILE: plugins/auth.client.js
================================================
export default defineNuxtPlugin(() => {
  const authStore = useAuthStore()
  
  // Initialize auth from localStorage
  authStore.initializeAuth()
})


================================================
FILE: public/robots.txt
================================================




================================================
FILE: server/tsconfig.json
================================================
{
  "extends": "../.nuxt/tsconfig.server.json"
}



================================================
FILE: stores/auth.js
================================================
import { defineStore } from 'pinia'

export const useAuthStore = defineStore('auth', () => {
  const user = ref(null)
  const token = ref(null)
  const loading = ref(false)

  const isAuthenticated = computed(() => !!token.value)

  const login = async (credentials) => {
    loading.value = true
    try {
      // Make API call to login
      const response = await $fetch('/api/auth/login', {
        method: 'POST',
        body: credentials
      })
      
      user.value = response.user
      token.value = response.token
      
      // Store in localStorage for persistence
      if (process.client) {
        localStorage.setItem('auth-token', response.token)
        localStorage.setItem('user', JSON.stringify(response.user))
      }
      
      return response
    } catch (error) {
      throw error
    } finally {
      loading.value = false
    }
  }

  const register = async (userData) => {
    loading.value = true
    try {
      const response = await $fetch('/api/auth/register', {
        method: 'POST',
        body: userData
      })
      
      user.value = response.user
      token.value = response.token
      
      if (process.client) {
        localStorage.setItem('auth-token', response.token)
        localStorage.setItem('user', JSON.stringify(response.user))
      }
      
      return response
    } catch (error) {
      throw error
    } finally {
      loading.value = false
    }
  }

  const logout = async () => {
    try {
      await $fetch('/api/auth/logout', {
        method: 'POST',
        headers: {
          Authorization: `Bearer ${token.value}`
        }
      })
    } catch (error) {
      console.error('Logout error:', error)
    } finally {
      user.value = null
      token.value = null
      
      if (process.client) {
        localStorage.removeItem('auth-token')
        localStorage.removeItem('user')
      }
      
      await navigateTo('/auth/login')
    }
  }

  const refreshToken = async () => {
    try {
      const response = await $fetch('/api/auth/refresh', {
        method: 'POST',
        headers: {
          Authorization: `Bearer ${token.value}`
        }
      })
      
      token.value = response.token
      
      if (process.client) {
        localStorage.setItem('auth-token', response.token)
      }
      
      return response
    } catch (error) {
      await logout()
      throw error
    }
  }

  const initializeAuth = () => {
    if (process.client) {
      const storedToken = localStorage.getItem('auth-token')
      const storedUser = localStorage.getItem('user')
      
      if (storedToken && storedUser) {
        token.value = storedToken
        user.value = JSON.parse(storedUser)
      }
    }
  }

  return {
    user: readonly(user),
    token: readonly(token),
    loading: readonly(loading),
    isAuthenticated,
    login,
    register,
    logout,
    refreshToken,
    initializeAuth
  }
})

